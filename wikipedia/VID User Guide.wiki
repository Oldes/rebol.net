{{Caution|Alpha Testers '''PLEASE NOTE:''' This document is ''out of date and inaccurate''.<br>We are working on new and totally revised documentation.}}
&nbsp;
{{banner}}
{| id="VIDGuide" cellspacing="0" cellpadding="0" style="width:100%; margin-top: 1em; border:2px #A3B1BF solid;"
|-
| colspan="2" style="background:#CEE0F2; text-align:center; border-bottom:1px #A3B1BF solid;" |
<h2 style="margin-top:.1em; border-bottom:0; font-weight:bold;">
Rebol Visual Interface Dialect User Guide
</h2> <!-- 3 line spacing of h2 is important for subsection edit links to work correctly, PLEASE DO NOT FIX -->
Copyright 2007 Rebol Technologies
|-
| style="width:60%; background:#F5FAFF; padding:1.2em;" valign="top" |
<!-- LEFT COLUMN -->

==Welcome==

{{dropcap|W}}elcome to the Rebol VID User Guide.

This manual introduces the Visual Interface Dialect, or VID. As a dialect, VID represents the '''application writer's layer''' of a multi-layered graphics system. VID is used to write the Graphical User Interface, the GUI, in Rebol.   

===Getting Started===

First, you will need a Rebol executable for your computer and Operating System.  Rebol is compiled on many different platforms, and the good people at Rebol Technologies have made it easy to download the correct version for your system.

This all starts at '''http://www.rebol.com'''.

Point your web browser to rebol.com and from there follow the Download link, click the downloader for your operating system and then install Rebol. Detailed instructions for installing can be found on the download web pages of rebol.com.
{{Need|Need to update this when the actual page is ready.  And add any DocBase info for installation.}}

===Hello Rebol===

Starting small; from the Rebol console, try typing

<pre>
view [text "Hello World"]
</pre>

and you will have a graphical window of Rebol VID announcing itself to the world.

You'll have to close the window using the system menu that comes with your windowing system, usually an &times; in the very top left or top right corner.  So let's fix that, and add our own close button.

<pre>
view [
    text "Hello World"
    button "Goodbye" [unview none]
]
</pre>

Press the goodbye button and the window will go away.

===Hello with button explained===

So what is going on?

*'''view''' is a Rebol function for building and displaying windows

*VID is a Rebol dialect for building windows.  The VID input is the ''block!'' that follows the '''view''' function and will be used as the argument for '''view'''.
{{hilight|'''view''' is data smart.  It determines if the argument is a window object, a predefined VID face or a block of VID input that needs to be processed and acts accordingly.  More on all these a little bit later but for Hello World we are using a block of VID input.|justify}}

* VID input block.  
**As VID processes the dialect input it matches a '''style''' called '''text''' and will then match against arguments allowed for '''text''' styles.  The dialect scanner matches a ''string!''. That is accepted by the text style and the  VID engine fills in a graphical face with a type of '''text''' and our string salutation.
**Next the VID parser detects another '''style''' called '''button''' and will then match against arguments acceptable for buttons.  In this case there is a ''string!'' which the VID parser will use to label the button.  It also matches a ''block!'' which the button style matches as a code block that can be used for the button action.  The VID parser fills in another face with a type of '''button'''. The button has a string label and an action block of '''unview none'''. The action block will be evaluated when somebody clicks the Goodbye button.

*'''unview''' is a Rebol function for removing windows from the screen.  An argument of '''none''' is a special argument meaning 'the last window you viewed', in this case; Hello World.

=== Customization ===

Now for an example of how VID simplfies some aspects of Graphical User Interface development.

<pre>
view [progress slider attach]
</pre>

While of no real use beyond demonstration; that short three word VID input block creates a functional window.

You end up with a progress meter that is attached to a slider.  Move the slider right and left, and the progress bar will fill in, to match where the slider is.

And yet, it still needs a close button.

<pre>
view [
    progress slider attach
    button "Goodbye" [unview none]
]
</pre>

The Goodbye button is fairly easy code to type, somewhat easy to remember, but there may be a better way. VID allows for certain customizations that enable consistent look and feel within and across applications.

==== Stylize ====

VID allows for the development of new styles.  New styles can be
*created from scratch; allowing you to create application specific styles.
*simple tweaks to existing elements enabling a consistent look and feel for all of your progams.
*everything in between.  Tweak a little bit, add behaviour, change the skin.

There is a whole section of this document on [[VID User Guide Stylize|STYLIZE]] but for now; lets just create a simple button we can use for to close example windows.
{{Need|Need to wait for stylize/master for this example. Code below is way too complicated for page 1.}}

<pre>
stylize [
    goodbye: button [
        [
            on-init: override :on-init [
                super face spec
                spec/text: copy "Goodbye"
                spec/action: [unview none]
            ]
        ]
        []
    ]
]
</pre>

| style="width:40%; background:#F8FFF8; border-left:1px solid #A3B1BF; padding:1.2em;" valign="top" |
<!-- RIGHT COLUMN -->

==Style Quick Reference==

{{Alphabetic index}}

{| class="wikitable" width=100%
|-
!Style !! elements
|-
<span id="A"></span>
!area
|
* action: ''block!''
* options: ''block!''
* size: ''pair!''
* text: ''string!''
* text-mask: ''string!''
|-
<span id="B"></span>
!blank
|
* color: ''tuple!''
* draw: ''block!''
* image: ''image!''
* size: ''pair!''
* shrink: ''pair!''
* source: ''file!''
* stretch: ''pair!''
|-
!btn
|
&nbsp; Based on '''button'''
|-
!button
|
* text: ''string!''
* action: ''block!''
|-
<span id="C"></span>
<span id="D"></span>
!draw
|
&nbsp; Based on '''blank'''
|-
<span id="E"></span>
<span id="F"></span>
!field
|
* text: ''string!''
* action: ''block!''
* text-mask: ''string!''
|-
!filler
|
&nbsp; Based on '''blank'''
|-
<span id="G"></span>
!group
|
* columns: ''integer!''
* pane: ''block!''
* pane-values: ''object!''
* background: ''tuple!''
* background-draw: ''block!''
* padding: ''pair!''
|-
<span id="H"></span>
!h1
|
&nbsp; Based on '''text'''
|-
!h2
|
&nbsp; Based on '''text'''
|-
<span id="I"></span>
!icon-list
|
* size: ''pair!''
* icons: ''block!''
* selected: ''block!''
* action: ''block!''
* background: ''tuple!''
* background-draw: ''block!''
|-
!image
|
&nbsp; Based on '''blank'''
|-
<span id="J"></span>
<span id="K"></span>
<span id="L"></span>
!label
|
&nbsp; Based on '''text'''
|-
!led
|
* state: ''logic!''
* color: ''tuple!''
|-
<span id="M"></span>
<span id="N"></span>
<span id="O"></span>
<span id="P"></span>
!pad
|
&nbsp; Based on '''blank'''
|-
!progress
|
* size: ''pair!''
* value: ''percent!''
|-
<span id="Q"></span>
<span id="R"></span>
<span id="S"></span>
!scroll-panel
|
* columns: ''integer!''
* pane: ''block!''
* pane-values: ''object!''
* background: ''tuple!''
* background-draw: ''block!''
* size: ''pair!''
|-
!scroller
|
&nbsp; Based on '''slider'''
|-
!slider
|
* action: ''block!''
* value: ''percent!''
* size: ''pair!''
|-
<span id="T"></span>
!text
|
* text: ''string!''
* text-rich: ''block!''
|-
!text-list
|
* size: ''pair!''
* rows: ''block!''
* selected: ''block!''
* action: ''block!''
* background: ''tuple!''
* background-draw: ''block!''
|}
<!-- Tip of the Day -->
{{Tip of the day - community portal}}
|-
| colspan="2" style="background:#CEE0F2; text-align:center; border-bottom:1px #A3B1BF solid; border-top:1px #A3B1BF solid;" |
<h2 style="margin-top:.1em; border-bottom:0; font-weight:bold;">
Style Options
</h2> <!-- 3 line spacing of h2 is important for subsection edit links to work correctly, PLEASE DO NOT FIX -->
|-
| colspan="2" style="background:#F5FAFF; padding:1.2em;" valign="top" |
<!-- Style Option table spans the whole page -->
== Style Option Reference ==
VID offers a lot.  There are many styles and each have a variety of options.  Options are applied to styles using the '''options''' keyword and a block! holding the option specification.  For example

<pre>
button "Quit" options [rounding: 10  material: 'sand]
</pre>

Would build a button in the layout with more rounded corners than the default, and a white beach sand look.

=== button options ===
{|class="wikitable" width="100%"
!Option
!Accepts
!Default
!Description
|-
!rounding
|integer!
!3
|Defines the rounding radius of the corners
|-
!material
|word!
!'aluminum
|The background gradient.  See [[#material_gradients|material gradients]]
|-
!size
|pair!
!120x24
|The default size, subject to change by auto layout resizing
|-
!shrink
|pair!
!20x0
|The amount the button will shrink during resize
|-
!stretch
|pair!
!10x0
|The amount of stretch in the button
|}

{|class="wikitable" width="75%"
|+Some Examples
!Example
!Look
|-
|button "Rounding 10" options [rounding: 10]
|[[images/vid-options-button-rounding10.png|No Description (Not Found)]]
|-
|button "Rounding 0" options [rounding: 0]
|[[images/vid-options-button-rounding0.png|No Description (Not Found)]]
|-
|button "50x20" options [size: 50x20 rounding: 10]
|[[images/vid-options-button-size50x20.png|No Description (Not Found)]]
|}

=== material gradients ===
{|class="wikitable" width="75%"
!Material
!Example
|-
!aluminum
|[[images/vid-button-aluminum.png|No Description (Not Found)]]
|-
!blue-aluminum
|[[images/vid-button-blue-aluminum.png|No Description (Not Found)]]
|-
!dark-aluminum
|[[images/vid-button-dark-aluminum.png|No Description (Not Found)]]
|-
!gloss
|[[images/vid-button-gloss.png|No Description (Not Found)]]
|-
!sand
|[[images/vid-button-sand.png|No Description (Not Found)]]
|}

<!-- End of two-column page -->
|}

{{Links|

{{:VID User Guide: Design Overview}}

{{:View System}}

{{:VID: Commands}}

{{:VID: Styles}}

{{:VID: Requesters}}

{{:VID: Stock Icons}}

{{:VID: Gui Editor}}

{{:VID: Style Editor}}

{{:VID: Face}}

{{:VID: Style creation guide}}

{{:VID: Skin creation guide}}

{{:VID: Changes|Notes on Rebol 2 and Rebol 3}}

{{:VID: Internals}}

{{:VID Implementation Notes}}

{{:VID Requirements}}